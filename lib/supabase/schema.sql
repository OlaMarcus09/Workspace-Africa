-- Users table (extends Supabase auth.users)
CREATE TABLE public.profiles (
  id uuid REFERENCES auth.users(id) PRIMARY KEY,
  email text NOT NULL,
  full_name text,
  phone text,
  role text DEFAULT 'professional', -- professional, corporate, partner
  company_name text,
  space_name text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now()
);

-- Spaces table (you provided this)
CREATE TABLE public.spaces (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name varchar NOT NULL,
  description text,
  location varchar NOT NULL,
  price integer NOT NULL,
  amenities text[], -- Using text array instead of ARRAY type
  images text[],
  contact_email varchar,
  contact_phone varchar,
  rating numeric DEFAULT 0.0,
  review_count integer DEFAULT 0,
  is_active boolean DEFAULT true,
  owner_id uuid REFERENCES public.profiles(id),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now()
);

-- Bookings table
CREATE TABLE public.bookings (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  user_id uuid REFERENCES public.profiles(id),
  space_id bigint REFERENCES public.spaces(id),
  booking_date date NOT NULL,
  start_time time NOT NULL,
  end_time time NOT NULL,
  status varchar DEFAULT 'confirmed', -- confirmed, cancelled, completed
  total_amount integer NOT NULL,
  qr_code varchar,
  payment_status varchar DEFAULT 'pending', -- pending, paid, failed, refunded
  created_at timestamp with time zone DEFAULT now()
);

-- Reviews table
CREATE TABLE public.reviews (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  user_id uuid REFERENCES public.profiles(id),
  space_id bigint REFERENCES public.spaces(id),
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  comment text,
  created_at timestamp with time zone DEFAULT now()
);

-- Team members table (for corporate accounts)
CREATE TABLE public.team_members (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  company_id uuid REFERENCES public.profiles(id),
  user_id uuid REFERENCES public.profiles(id),
  role varchar DEFAULT 'member', -- admin, member
  monthly_budget integer DEFAULT 50000,
  created_at timestamp with time zone DEFAULT now()
);

-- Space availability table
CREATE TABLE public.space_availability (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  space_id bigint REFERENCES public.spaces(id),
  date date NOT NULL,
  available_desks integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  UNIQUE(space_id, date)
);
